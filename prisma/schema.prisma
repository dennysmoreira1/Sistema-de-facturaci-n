// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo de Usuario
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  clients       Client[]
  invoices      Invoice[]
}

// Modelo de Cliente
model Client {
  id        String   @id @default(cuid())
  name      String
  email     String
  company   String?
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  invoices  Invoice[]
  
  @@index([userId])
  @@index([email])
}

// Modelo de Factura
model Invoice {
  id            String   @id @default(cuid())
  invoiceNumber String   @unique
  date          DateTime @default(now())
  dueDate       DateTime?
  status        String   @default("PENDING") // PAID, PENDING, OVERDUE, CANCELLED
  
  subtotal      Float    @default(0)
  taxRate       Float    @default(0)
  taxAmount     Float    @default(0)
  total         Float    @default(0)
  
  notes         String?
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  clientId      String
  client        Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  items         InvoiceItem[]
  
  @@index([userId])
  @@index([clientId])
  @@index([status])
  @@index([invoiceNumber])
}

// Modelo de Item de Factura
model InvoiceItem {
  id          String  @id @default(cuid())
  description String
  quantity    Float
  unitPrice   Float
  total       Float
  
  invoiceId   String
  invoice     Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  
  @@index([invoiceId])
}

